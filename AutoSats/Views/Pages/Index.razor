@page "/"
@inject IExchangeScheduler scheduler

@if (exchangeSchedules == null)
{
    <PageHeader Title="Loading schedules" Ghost="true" />

    <Card>
        <Skeleton Active="true"></Skeleton>
    </Card>
}
else if (!exchangeSchedules.Any())
{
    <NoSchedules />
}
else if (exchangeSchedules.Length > 1)
{
    <MultipleSchedules ExchangeSchedules="exchangeSchedules" />
}
else
{
    <SingleSchedule ScheduleId="exchangeSchedules[0].Id" ScheduleDeleted="SingleScheduleDeleted" />
}

@code
{
    private ExchangeScheduleSummary[]? exchangeSchedules { get; set; }

    private Task SingleScheduleDeleted()
    {
        return InitializeSchedulesAsync();
    }

    private async Task InitializeSchedulesAsync()
    {
        var schedules = await scheduler.ListSchedulesAsync();
        exchangeSchedules = schedules.ToArray();
    }

    protected override Task OnInitializedAsync()
    {
        return InitializeSchedulesAsync();
    }
}
